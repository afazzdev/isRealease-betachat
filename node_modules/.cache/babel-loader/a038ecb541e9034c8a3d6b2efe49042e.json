{"ast":null,"code":"import _defineProperty from \"/home/latif/faizi/react/mini-project/Copy-beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  activeChat: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"INITIAL_CHAT\":\n      return action.payload;\n\n    case \"CREATE_NEW_CHAT\":\n      return _objectSpread({}, state, {\n        chat: [...state.chat, action.payload]\n      });\n\n    case \"ACTIVE_CHATS\":\n      return _objectSpread({}, state, {\n        activeChat: action.payload\n      });\n\n    case \"SEND_MESSAGE\":\n      if (state.messages.length === 0) {\n        return _objectSpread({}, state, {\n          [action.name]: [{\n            id: 1 + Math.random(),\n            chat: action.payload,\n            sender: action.sender\n          }]\n        });\n      } else {\n        return _objectSpread({}, state, {\n          [action.name]: [...state[action.name], {\n            id: 1 + Math.random(),\n            sender: action.sender,\n            chat: action.payload\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/redux/reducers/MessagesReducer.js"],"names":["initialState","activeChat","state","action","type","payload","chat","messages","length","name","id","Math","random","sender"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AAEF,SAAK,iBAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACE,OAAvB;AAFR;;AAKF,SAAK,cAAL;AACE,+BACKH,KADL;AAEED,QAAAA,UAAU,EAAEE,MAAM,CAACE;AAFrB;;AAKF,SAAK,cAAL;AACE,UAAIH,KAAK,CAACK,QAAN,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,iCACKN,KADL;AAEE,WAACC,MAAM,CAACM,IAAR,GAAe,CACb;AACEC,YAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADV;AAEEN,YAAAA,IAAI,EAAEH,MAAM,CAACE,OAFf;AAGEQ,YAAAA,MAAM,EAAEV,MAAM,CAACU;AAHjB,WADa;AAFjB;AAUD,OAXD,MAWO;AACL,iCACKX,KADL;AAEE,WAACC,MAAM,CAACM,IAAR,GAAe,CACb,GAAGP,KAAK,CAACC,MAAM,CAACM,IAAR,CADK,EAEb;AACEC,YAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADV;AAEEC,YAAAA,MAAM,EAAEV,MAAM,CAACU,MAFjB;AAGEP,YAAAA,IAAI,EAAEH,MAAM,CAACE;AAHf,WAFa;AAFjB;AAWD;;AAEH;AACE,aAAOH,KAAP;AA3CJ;AA6CD,CA9CD","sourcesContent":["const initialState = {\n  activeChat: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"INITIAL_CHAT\":\n      return action.payload;\n\n    case \"CREATE_NEW_CHAT\":\n      return {\n        ...state,\n        chat: [...state.chat, action.payload]\n      };\n\n    case \"ACTIVE_CHATS\":\n      return {\n        ...state,\n        activeChat: action.payload\n      };\n\n    case \"SEND_MESSAGE\":\n      if (state.messages.length === 0) {\n        return {\n          ...state,\n          [action.name]: [\n            {\n              id: 1 + Math.random(),\n              chat: action.payload,\n              sender: action.sender\n            }\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          [action.name]: [\n            ...state[action.name],\n            {\n              id: 1 + Math.random(),\n              sender: action.sender,\n              chat: action.payload\n            }\n          ]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}