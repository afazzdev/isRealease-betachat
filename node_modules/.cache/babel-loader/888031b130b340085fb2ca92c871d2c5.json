{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/MessageWindow/MessageWindow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MessageBox from \"../MessageBox\";\nimport { useSelector } from \"react-redux\"; // import Badge from \"../Badge\";\n\nconst MessageWindow = props => {\n  const listReceiver = useSelector(state => state.messages);\n  const receiver = Object.keys(listReceiver);\n  const myId = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id : \"\";\n  const myId2 = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")).messages.data.map(dat => dat.id_user_from) : \"\";\n\n  function isEqual() {\n    // comapring each element of array\n    for (var i = 0; i < myId2.length; i++) if (myId2[i] == myId) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"message-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, listReceiver[receiver[props.idReceiver]].map((message, i) => React.createElement(MessageBox, {\n    sender: message.sender,\n    key: i,\n    isEqual: isEqual,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, message.chat, console.log(\"my id : \", myId, \"my id 2 :\", myId2, \"isEqual : \", isEqual(), \" props sender : \", props.sender))), console.log(\"receiver :\", receiver[props.idReceiver]));\n};\n\nMessageWindow.propTypes = {\n  messages: PropTypes.array\n};\nexport default MessageWindow;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/MessageWindow/MessageWindow.js"],"names":["React","PropTypes","MessageBox","useSelector","MessageWindow","props","listReceiver","state","messages","receiver","Object","keys","myId","localStorage","getItem","JSON","parse","loginData","data","id","myId2","map","dat","id_user_from","isEqual","i","length","idReceiver","message","sender","chat","console","log","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,YAAY,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAhC;AAEA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYL,YAAZ,CAAjB;AAEA,QAAMM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,EAA+CG,SAA/C,CAAyDC,IAAzD,CAA8DC,EADrD,GAET,EAFJ;AAIA,QAAMC,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,YAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,EAA+CN,QAA/C,CAAwDU,IAAxD,CAA6DG,GAA7D,CACEC,GAAG,IAAIA,GAAG,CAACC,YADb,CADU,GAIV,EAJJ;;AAKA,WAASC,OAAT,GAAmB;AACjB;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EACE,IAAIL,KAAK,CAACK,CAAD,CAAL,IAAYb,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACJ;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACG,QAAQ,CAACJ,KAAK,CAACsB,UAAP,CAAT,CAAZ,CAAyCN,GAAzC,CAA6C,CAACO,OAAD,EAAUH,CAAV,KAC5C,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEG,OAAO,CAACC,MAA5B;AAAoC,IAAA,GAAG,EAAEJ,CAAzC;AAA4C,IAAA,OAAO,EAAED,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,CAACE,IADX,EAEGC,OAAO,CAACC,GAAR,CACC,UADD,EAECpB,IAFD,EAGC,WAHD,EAICQ,KAJD,EAKC,YALD,EAMCI,OAAO,EANR,EAOC,kBAPD,EAQCnB,KAAK,CAACwB,MARP,CAFH,CADD,CADH,EAgBGE,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvB,QAAQ,CAACJ,KAAK,CAACsB,UAAP,CAAlC,CAhBH,CADF;AAoBD,CA5CD;;AA8CAvB,aAAa,CAAC6B,SAAd,GAA0B;AACxBzB,EAAAA,QAAQ,EAAEP,SAAS,CAACiC;AADI,CAA1B;AAIA,eAAe9B,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MessageBox from \"../MessageBox\";\nimport { useSelector } from \"react-redux\";\n// import Badge from \"../Badge\";\n\nconst MessageWindow = props => {\n  const listReceiver = useSelector(state => state.messages);\n\n  const receiver = Object.keys(listReceiver);\n\n  const myId = localStorage.getItem(\"reduxState\")\n    ? JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id\n    : \"\";\n\n  const myId2 = localStorage.getItem(\"reduxState\")\n    ? JSON.parse(localStorage.getItem(\"reduxState\")).messages.data.map(\n        dat => dat.id_user_from\n      )\n    : \"\";\n  function isEqual() {\n    // comapring each element of array\n    for (var i = 0; i < myId2.length; i++)\n      if (myId2[i] == myId) {\n        return true;\n      } else {\n        return false;\n      }\n  }\n\n  return (\n    <div className=\"message-window\">\n      {listReceiver[receiver[props.idReceiver]].map((message, i) => (\n        <MessageBox sender={message.sender} key={i} isEqual={isEqual}>\n          {message.chat}\n          {console.log(\n            \"my id : \",\n            myId,\n            \"my id 2 :\",\n            myId2,\n            \"isEqual : \",\n            isEqual(),\n            \" props sender : \",\n            props.sender\n          )}\n        </MessageBox>\n      ))}\n      {console.log(\"receiver :\", receiver[props.idReceiver])}\n    </div>\n  );\n};\n\nMessageWindow.propTypes = {\n  messages: PropTypes.array\n};\n\nexport default MessageWindow;\n"]},"metadata":{},"sourceType":"module"}