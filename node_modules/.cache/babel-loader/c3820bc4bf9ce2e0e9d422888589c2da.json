{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/containers/Sidebar/SidebarContactWindow.js\";\nimport React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setWindowInformation } from \"../../redux/actions/WindowActions\";\nimport { openMessage } from \"../../redux/actions/OpenedMessageActions\";\nimport { getListFromObject, getListFromArray } from \"../../helpers\";\nimport ContactWindow from \"../../components/ContactWindow\";\nimport Setting from \"../../components/Setting\";\n\nclass SidebarContactWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.openMessage = this.openMessage.bind(this);\n  }\n\n  openMessage(contactId) {\n    const selectedContact = this.props.contacts.reduce((contact, current) => current.id === contactId ? current : contact, null);\n    const selectedMessage = this.props.messages[\"\".concat(contactId)];\n\n    if (selectedContact !== null) {\n      this.props.dispatch(openMessage(selectedContact, contactId));\n      this.props.dispatch(setWindowInformation(selectedContact.title, \"Last conversation: \".concat(selectedMessage && selectedMessage.date ? selectedMessage.date : \"never\")));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar__contact-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(ContactWindow, {\n        contacts: getListFromObject(this.props.messages, this.props.search, [\"title\", \"meta\", \"date\"]),\n        activeContactId: this.props.openedMessage.contact.id,\n        onContactClick: contactId => this.openMessage(contactId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contacts\",\n      render: () => React.createElement(ContactWindow, {\n        contacts: getListFromArray(this.props.contacts, this.props.search, [\"title\", \"meta\"]),\n        activeContactId: this.props.openedMessage.contact.id,\n        onContactClick: contactId => this.openMessage(contactId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/setting\",\n      component: Setting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(connect(state => ({\n  contacts: state.contacts,\n  messages: state.messages,\n  openedMessage: state.openedMessage,\n  search: state.search\n}))(SidebarContactWindow));","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/containers/Sidebar/SidebarContactWindow.js"],"names":["React","Component","Route","withRouter","connect","setWindowInformation","openMessage","getListFromObject","getListFromArray","ContactWindow","Setting","SidebarContactWindow","constructor","props","bind","contactId","selectedContact","contacts","reduce","contact","current","id","selectedMessage","messages","dispatch","title","date","render","search","openedMessage","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { setWindowInformation } from \"../../redux/actions/WindowActions\";\nimport { openMessage } from \"../../redux/actions/OpenedMessageActions\";\nimport { getListFromObject, getListFromArray } from \"../../helpers\";\n\nimport ContactWindow from \"../../components/ContactWindow\";\nimport Setting from \"../../components/Setting\";\n\nclass SidebarContactWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.openMessage = this.openMessage.bind(this);\n  }\n\n  openMessage(contactId) {\n    const selectedContact = this.props.contacts.reduce(\n      (contact, current) => (current.id === contactId ? current : contact),\n      null\n    );\n    const selectedMessage = this.props.messages[`${contactId}`];\n    if (selectedContact !== null) {\n      this.props.dispatch(openMessage(selectedContact, contactId));\n      this.props.dispatch(\n        setWindowInformation(\n          selectedContact.title,\n          `Last conversation: ${\n            selectedMessage && selectedMessage.date\n              ? selectedMessage.date\n              : \"never\"\n          }`\n        )\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar__contact-window\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <ContactWindow\n              contacts={getListFromObject(\n                this.props.messages,\n                this.props.search,\n                [\"title\", \"meta\", \"date\"]\n              )}\n              activeContactId={this.props.openedMessage.contact.id}\n              onContactClick={contactId => this.openMessage(contactId)}\n            />\n          )}\n        />\n        <Route\n          path=\"/contacts\"\n          render={() => (\n            <ContactWindow\n              contacts={getListFromArray(\n                this.props.contacts,\n                this.props.search,\n                [\"title\", \"meta\"]\n              )}\n              activeContactId={this.props.openedMessage.contact.id}\n              onContactClick={contactId => this.openMessage(contactId)}\n            />\n          )}\n        />\n\n        <Route path=\"/setting\" component={Setting} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(state => ({\n    contacts: state.contacts,\n    messages: state.messages,\n    openedMessage: state.openedMessage,\n    search: state.search\n  }))(SidebarContactWindow)\n);\n"]},"metadata":{},"sourceType":"module"}