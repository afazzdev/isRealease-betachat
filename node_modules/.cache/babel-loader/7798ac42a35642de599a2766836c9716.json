{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\nimport { sendMessage, initialMsg } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const { messages } = this.state;\n      // console.log(\"idreceiver :\", this.props.idReceiver);\n\n      const datas = {\n        messages: this.state.messages,\n        // sender: this.state.sender,\n        name: this.props.activeReceiverUsername,\n        id_user_from: this.state.sender,\n        id_user_to: this.props.activeReceiverId\n      };\n\n      if (e.target.value) {\n        this.props.sendMessage(datas);\n        console.log(\"will send: \", datas);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        messages: e.target.value\n      }); // console.log(this.state.messages);\n    };\n\n    this.handleKeyUp = e => {\n      e.preventDefault();\n\n      if (e.keyCode === 13 && !e.ctrlKey && this.handleSubmit && this.state.messages.trim().length !== 0) {\n        this.handleSubmit(e);\n        console.log(this.state);\n        this.setState({\n          messages: \"\"\n        });\n      } else if (e.keyCode === 13 && e.ctrlKey && this.state.messages.trim().length !== 0) {\n        e.target.value = e.target.value + \"\\n\";\n        return true;\n      }\n    };\n\n    this.state = {\n      messages: \"\",\n      sender: localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id : \"\",\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      name: this.props.activeReceiverUsername\n    });\n    this.props.initialMsg(this.state.sender); // console.log(\"snder: \", this.state.sender);\n  }\n\n  render() {\n    const _this$props = this.props,\n          messageState = _this$props.messageState,\n          activeReceiverUsername = _this$props.activeReceiverUsername,\n          activeReceiverMeta = _this$props.activeReceiverMeta,\n          idReceiver = _this$props.idReceiver;\n    const receiverList = Object.keys(messageState);\n    return React.createElement(\"div\", {\n      className: \"main-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-window__top-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(WindowTopBar, {\n      title: activeReceiverUsername,\n      meta: activeReceiverMeta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-window__message-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MessageWindow, {\n      messages: this.props.messages // idReceiver={idReceiver}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(MainInput, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      onKeyUp: this.handleKeyUp,\n      value: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages,\n  activeReceiverUsername: state.messages.activeChat ? state.messages.activeChat.username : \"\",\n  activeReceiverMeta: state.messages.activeChat ? state.messages.activeChat.phone : \"\",\n  activeReceiverId: state.messages.activeChat ? state.messages.activeChat.id : \"\"\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  sendMessage,\n  initialMsg\n})(MainWindow));","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js"],"names":["React","Component","connect","withRouter","MainInput","MessageWindow","WindowTopBar","sendMessage","initialMsg","MainWindow","constructor","handleSubmit","e","preventDefault","datas","messages","state","name","props","activeReceiverUsername","id_user_from","sender","id_user_to","activeReceiverId","target","value","console","log","handleChange","setState","handleKeyUp","keyCode","ctrlKey","trim","length","localStorage","getItem","JSON","parse","loginData","data","id","componentDidMount","render","messageState","activeReceiverMeta","idReceiver","receiverList","Object","keys","mapStateToProps","activeChat","username","phone"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\n\nimport { sendMessage, initialMsg } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: \"\",\n      sender: localStorage.getItem(\"reduxState\")\n        ? JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id\n        : \"\",\n      name: \"\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // const { messages } = this.state;\n    // console.log(\"idreceiver :\", this.props.idReceiver);\n\n    const datas = {\n      messages: this.state.messages,\n      // sender: this.state.sender,\n      name: this.props.activeReceiverUsername,\n      id_user_from: this.state.sender,\n      id_user_to: this.props.activeReceiverId\n    };\n\n    if (e.target.value) {\n      this.props.sendMessage(datas);\n      console.log(\"will send: \", datas);\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ messages: e.target.value });\n    // console.log(this.state.messages);\n  };\n\n  handleKeyUp = e => {\n    e.preventDefault();\n\n    if (\n      e.keyCode === 13 &&\n      !e.ctrlKey &&\n      this.handleSubmit &&\n      this.state.messages.trim().length !== 0\n    ) {\n      this.handleSubmit(e);\n      console.log(this.state);\n\n      this.setState({ messages: \"\" });\n    } else if (\n      e.keyCode === 13 &&\n      e.ctrlKey &&\n      this.state.messages.trim().length !== 0\n    ) {\n      e.target.value = e.target.value + \"\\n\";\n      return true;\n    }\n  };\n\n  componentDidMount() {\n    this.setState({ name: this.props.activeReceiverUsername });\n    this.props.initialMsg(this.state.sender);\n    // console.log(\"snder: \", this.state.sender);\n  }\n\n  render() {\n    const {\n      messageState,\n      activeReceiverUsername,\n      activeReceiverMeta,\n      idReceiver\n    } = this.props;\n    const receiverList = Object.keys(messageState);\n\n    return (\n      <div className=\"main-window\">\n        <div className=\"main-window__top-bar\">\n          <WindowTopBar\n            title={activeReceiverUsername}\n            meta={activeReceiverMeta}\n          />\n        </div>\n        <div className=\"main-window__message-window\">\n          <MessageWindow\n            messages={this.props.messages}\n            // idReceiver={idReceiver}\n          />\n        </div>\n        <MainInput\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          onKeyUp={this.handleKeyUp}\n          value={this.state.messages}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages,\n  activeReceiverUsername: state.messages.activeChat\n    ? state.messages.activeChat.username\n    : \"\",\n  activeReceiverMeta: state.messages.activeChat\n    ? state.messages.activeChat.phone\n    : \"\",\n  activeReceiverId: state.messages.activeChat\n    ? state.messages.activeChat.id\n    : \"\"\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { sendMessage, initialMsg }\n  )(MainWindow)\n);\n"]},"metadata":{},"sourceType":"module"}