{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/Input/Input.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.listenKeyPress = this.listenKeyPress.bind(this);\n    this.getInput = this.getInput.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.focusInput = this.focusInput.bind(this);\n  }\n\n  listenKeyPress(event) {\n    if (event.keyCode === 13 && !event.ctrlKey && this.props.onSubmit) {\n      this.props.onSubmit(this.input.value);\n      this.clearInput();\n    } else if (event.keyCode === 13 && event.ctrlKey) {\n      this.input.value = this.input.value + \"\\n\";\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  getInput() {\n    return this.input.value.trim();\n  }\n\n  clearInput() {\n    this.input.value = \"\";\n  }\n\n  focusInput() {\n    this.input.focus();\n  }\n\n  render() {\n    return React.createElement(\"textarea\", {\n      className: \"input\",\n      ref: input => this.input = input,\n      autoFocus: true,\n      onKeyUp: this.listenKeyPress,\n      placeholder: this.props.placeholder,\n      onChange: this.props.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  onSubmit: PropTypes.func\n};\nexport default Input;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/Input/Input.js"],"names":["React","Component","PropTypes","Input","constructor","props","listenKeyPress","bind","getInput","clearInput","focusInput","event","keyCode","ctrlKey","onSubmit","input","value","trim","focus","render","placeholder","onChange","propTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,cAAc,CAACK,KAAD,EAAQ;AACpB,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwB,CAACD,KAAK,CAACE,OAA/B,IAA0C,KAAKR,KAAL,CAAWS,QAAzD,EAAmE;AACjE,WAAKT,KAAL,CAAWS,QAAX,CAAoB,KAAKC,KAAL,CAAWC,KAA/B;AACA,WAAKP,UAAL;AACD,KAHD,MAGO,IAAIE,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,OAAlC,EAA2C;AAChD,WAAKE,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,GAAmB,IAAtC;AACA,aAAO,IAAP;AACD,KAHM,MAGA;AACL,aAAO,IAAP;AACD;AACF;;AAEDR,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,EAAP;AACD;;AAEDR,EAAAA,UAAU,GAAG;AACX,SAAKM,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AACD;;AAEDN,EAAAA,UAAU,GAAG;AACX,SAAKK,KAAL,CAAWG,KAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,GAAG,EAAEJ,KAAK,IAAK,KAAKA,KAAL,GAAaA,KAF9B;AAGE,MAAA,SAAS,EAAE,IAHb;AAIE,MAAA,OAAO,EAAE,KAAKT,cAJhB;AAKE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWe,WAL1B;AAME,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AA5C2B;;AA+C9BlB,KAAK,CAACmB,SAAN,GAAkB;AAChBF,EAAAA,WAAW,EAAElB,SAAS,CAACqB,MADP;AAEhBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB;AAFJ,CAAlB;AAKA,eAAerB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.listenKeyPress = this.listenKeyPress.bind(this);\n    this.getInput = this.getInput.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.focusInput = this.focusInput.bind(this);\n  }\n\n  listenKeyPress(event) {\n    if (event.keyCode === 13 && !event.ctrlKey && this.props.onSubmit) {\n      this.props.onSubmit(this.input.value);\n      this.clearInput();\n    } else if (event.keyCode === 13 && event.ctrlKey) {\n      this.input.value = this.input.value + \"\\n\";\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  getInput() {\n    return this.input.value.trim();\n  }\n\n  clearInput() {\n    this.input.value = \"\";\n  }\n\n  focusInput() {\n    this.input.focus();\n  }\n\n  render() {\n    return (\n      <textarea\n        className=\"input\"\n        ref={input => (this.input = input)}\n        autoFocus={true}\n        onKeyUp={this.listenKeyPress}\n        placeholder={this.props.placeholder}\n        onChange={this.props.onChange}\n      ></textarea>\n    );\n  }\n}\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  onSubmit: PropTypes.func\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}