{"ast":null,"code":"import _defineProperty from \"/home/latif/faizi/react/mini-project/Copy-beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  messageSatu: [{\n    id: 1,\n    chat: \"chat 1\"\n  }, {\n    id: 2,\n    chat: \"chat 2\"\n  }, {\n    id: 3,\n    chat: \"\"\n  }],\n  messageDua: [{\n    id: 1,\n    chat: \"chat 1\"\n  }, {\n    id: 2,\n    chat: \"chat 2\"\n  }, {\n    id: 3,\n    chat: \"\"\n  }],\n  abc101: {\n    title: \"Vasel\",\n    meta: \"Apa Kabar \",\n    date: \"Sep 20 2019\",\n    image: \"./public/images/cat8.jpg\",\n    messages: [{\n      type: \"badge\",\n      content: \"Sep 15 1019, 08:32\"\n    }, {\n      type: \"badge\",\n      content: \"you joined the conversation\"\n    }, {\n      type: \"message\",\n      content: \"Assalamualaikum\",\n      meta: \"vasel\",\n      date: \"Sep 20 2019, 11:21\"\n    }, {\n      type: \"message\",\n      content: \"Apa Kabar\",\n      meta: \"vasel\",\n      date: \"Sep 20 2019, 11:21\"\n    }]\n  },\n  message: [{\n    id: 1,\n    chat: \"chat 1\"\n  }, {\n    id: 2,\n    chat: \"chat 2\"\n  }, {\n    id: 3,\n    chat: \"\"\n  }]\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"SEND_MESSAGE\":\n      if (state.message.length === 0) {\n        return _objectSpread({}, state, {\n          message: [{\n            id: 1 + Math.random(),\n            chat: action.payload\n          }]\n        });\n      } else {\n        return _objectSpread({}, state, {\n          message: [...state.message, {\n            id: 1 + Math.random(),\n            chat: action.payload\n          }]\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/redux/reducers/MessagesReducer.js"],"names":["initialState","messageSatu","id","chat","messageDua","abc101","title","meta","date","image","messages","type","content","message","state","action","length","Math","random","payload"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADW,EAEX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFW,EAGX;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHW,CADM;AAMnBC,EAAAA,UAAU,EAAE,CACV;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADU,EAEV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFU,EAGV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHU,CANO;AAWnBE,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,IAAI,EAAE,YAFA;AAGNC,IAAAA,IAAI,EAAE,aAHA;AAINC,IAAAA,KAAK,EAAE,0BAJD;AAKNC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADQ,EAKR;AACED,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KALQ,EASR;AACED,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,iBAFX;AAGEL,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KATQ,EAeR;AACEG,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE,WAFX;AAGEL,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAfQ;AALJ,GAXW;AAuCnBK,EAAAA,OAAO,EAAE,CACP;AAAEX,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADO,EAEP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFO,EAGP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHO;AAvCU,CAArB;AA8CA,gBAAe,CAACW,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,cAAL;AACE,UAAIG,KAAK,CAACD,OAAN,CAAcG,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,iCACKF,KADL;AAEED,UAAAA,OAAO,EAAE,CAAC;AAAEX,YAAAA,EAAE,EAAE,IAAIe,IAAI,CAACC,MAAL,EAAV;AAAyBf,YAAAA,IAAI,EAAEY,MAAM,CAACI;AAAtC,WAAD;AAFX;AAID,OALD,MAKO;AACL,iCACKL,KADL;AAEED,UAAAA,OAAO,EAAE,CACP,GAAGC,KAAK,CAACD,OADF,EAEP;AACEX,YAAAA,EAAE,EAAE,IAAIe,IAAI,CAACC,MAAL,EADV;AAEEf,YAAAA,IAAI,EAAEY,MAAM,CAACI;AAFf,WAFO;AAFX;AAUD;;AAEH;AACE,aAAOL,KAAP;AArBJ;AAuBD,CAxBD","sourcesContent":["const initialState = {\n  messageSatu: [\n    { id: 1, chat: \"chat 1\" },\n    { id: 2, chat: \"chat 2\" },\n    { id: 3, chat: \"\" }\n  ],\n  messageDua: [\n    { id: 1, chat: \"chat 1\" },\n    { id: 2, chat: \"chat 2\" },\n    { id: 3, chat: \"\" }\n  ],\n  abc101: {\n    title: \"Vasel\",\n    meta: \"Apa Kabar \",\n    date: \"Sep 20 2019\",\n    image: \"./public/images/cat8.jpg\",\n    messages: [\n      {\n        type: \"badge\",\n        content: \"Sep 15 1019, 08:32\"\n      },\n      {\n        type: \"badge\",\n        content: \"you joined the conversation\"\n      },\n      {\n        type: \"message\",\n        content: \"Assalamualaikum\",\n        meta: \"vasel\",\n        date: \"Sep 20 2019, 11:21\"\n      },\n      {\n        type: \"message\",\n        content: \"Apa Kabar\",\n        meta: \"vasel\",\n        date: \"Sep 20 2019, 11:21\"\n      }\n    ]\n  },\n  message: [\n    { id: 1, chat: \"chat 1\" },\n    { id: 2, chat: \"chat 2\" },\n    { id: 3, chat: \"\" }\n  ]\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SEND_MESSAGE\":\n      if (state.message.length === 0) {\n        return {\n          ...state,\n          message: [{ id: 1 + Math.random(), chat: action.payload }]\n        };\n      } else {\n        return {\n          ...state,\n          message: [\n            ...state.message,\n            {\n              id: 1 + Math.random(),\n              chat: action.payload\n            }\n          ]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}