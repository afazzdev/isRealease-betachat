{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\nimport { sendMessage } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const { messages } = this.state;\n\n      console.log(e);\n      const datas = {\n        chat: this.state.messages,\n        id_user_from: this.state.sender,\n        id_user_to: this.props.activeReceiver\n      };\n\n      if (e.target.value) {\n        this.props.sendMessage(datas);\n        console.log(datas);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        messages: e.target.value\n      }); // console.log(this.state.messages);\n    };\n\n    this.handleKeyUp = e => {\n      e.preventDefault();\n\n      if (e.keyCode === 13 && !e.ctrlKey && this.handleSubmit && this.state.messages.trim().length !== 0) {\n        this.handleSubmit(e);\n        console.log(this.state);\n        this.setState({\n          messages: \"\"\n        });\n      } else if (e.keyCode === 13 && e.ctrlKey && this.state.messages.trim().length !== 0) {\n        e.target.value = e.target.value + \"\\n\";\n        return true;\n      }\n    };\n\n    this.state = {\n      messages: \"\",\n      sender: JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id,\n      name: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      name: this.props.activeReceiver\n    });\n    console.log(this.state.name);\n  }\n\n  render() {\n    const _this$props = this.props,\n          messageState = _this$props.messageState,\n          activeReceiver = _this$props.activeReceiver,\n          idReceiver = _this$props.idReceiver;\n    const receiverList = Object.keys(messageState);\n    return React.createElement(\"div\", {\n      className: \"main-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-window__top-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(WindowTopBar, {\n      title: activeReceiver,\n      meta: \"some meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-window__message-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MessageWindow, {\n      messages: this.props.messages,\n      idReceiver: idReceiver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(MainInput, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      onKeyUp: this.handleKeyUp,\n      value: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  sendMessage\n})(MainWindow));","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js"],"names":["React","Component","connect","withRouter","MainInput","MessageWindow","WindowTopBar","sendMessage","MainWindow","constructor","handleSubmit","e","preventDefault","console","log","datas","chat","state","messages","id_user_from","sender","id_user_to","props","activeReceiver","target","value","handleChange","setState","handleKeyUp","keyCode","ctrlKey","trim","length","JSON","parse","localStorage","getItem","loginData","data","id","name","componentWillMount","render","messageState","idReceiver","receiverList","Object","keys","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\n\nimport { sendMessage } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: \"\",\n      sender: JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id,\n      name: \"\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // const { messages } = this.state;\n    console.log(e);\n\n    const datas = {\n      chat: this.state.messages,\n      id_user_from: this.state.sender,\n      id_user_to: this.props.activeReceiver\n    };\n\n    if (e.target.value) {\n      this.props.sendMessage(datas);\n      console.log(datas);\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ messages: e.target.value });\n    // console.log(this.state.messages);\n  };\n\n  handleKeyUp = e => {\n    e.preventDefault();\n\n    if (\n      e.keyCode === 13 &&\n      !e.ctrlKey &&\n      this.handleSubmit &&\n      this.state.messages.trim().length !== 0\n    ) {\n      this.handleSubmit(e);\n      console.log(this.state);\n\n      this.setState({ messages: \"\" });\n    } else if (\n      e.keyCode === 13 &&\n      e.ctrlKey &&\n      this.state.messages.trim().length !== 0\n    ) {\n      e.target.value = e.target.value + \"\\n\";\n      return true;\n    }\n  };\n\n  componentWillMount() {\n    this.setState({ name: this.props.activeReceiver });\n    console.log(this.state.name);\n  }\n\n  render() {\n    const { messageState, activeReceiver, idReceiver } = this.props;\n    const receiverList = Object.keys(messageState);\n\n    return (\n      <div className=\"main-window\">\n        <div className=\"main-window__top-bar\">\n          <WindowTopBar title={activeReceiver} meta=\"some meta\" />\n        </div>\n        <div className=\"main-window__message-window\">\n          <MessageWindow\n            messages={this.props.messages}\n            idReceiver={idReceiver}\n          />\n        </div>\n        <MainInput\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          onKeyUp={this.handleKeyUp}\n          value={this.state.messages}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { sendMessage }\n  )(MainWindow)\n);\n"]},"metadata":{},"sourceType":"module"}