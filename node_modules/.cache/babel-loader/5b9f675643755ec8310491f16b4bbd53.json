{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/Input/Input.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.listenKeyPress = this.listenKeyPress.bind(this);\n    this.getInput = this.getInput.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.focusInput = this.focusInput.bind(this);\n  }\n\n  listenKeyPress(event) {\n    if (event.keyCode === 13 && !event.ctrlKey && this.props.onSubmit) {\n      this.props.onSubmit(this.input.value);\n      this.clearInput();\n    } else if (event.keyCode === 13 && event.ctrlKey) {\n      this.input.value = this.input.value + '\\n';\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  getInput() {\n    return this.input.value.trim();\n  }\n\n  clearInput() {\n    this.input.value = '';\n  }\n\n  focusInput() {\n    this.input.focus();\n  }\n\n  render() {\n    return React.createElement(\"textarea\", {\n      className: \"input\",\n      ref: input => this.input = input,\n      autoFocus: true,\n      onKeyUp: this.listenKeyPress,\n      placeholder: this.props.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  onSubmit: PropTypes.func\n};\nexport default Input;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/Input/Input.js"],"names":["React","Component","PropTypes","Input","constructor","props","listenKeyPress","bind","getInput","clearInput","focusInput","event","keyCode","ctrlKey","onSubmit","input","value","trim","focus","render","placeholder","propTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,cAAc,CAACK,KAAD,EAAQ;AAClB,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwB,CAACD,KAAK,CAACE,OAA/B,IAA0C,KAAKR,KAAL,CAAWS,QAAzD,EAAmE;AAC/D,WAAKT,KAAL,CAAWS,QAAX,CAAoB,KAAKC,KAAL,CAAWC,KAA/B;AACA,WAAKP,UAAL;AACH,KAHD,MAGO,IAAIE,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,OAAlC,EAA2C;AAC9C,WAAKE,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,GAAmB,IAAtC;AACA,aAAO,IAAP;AACH,KAHM,MAGA;AACH,aAAO,IAAP;AACH;AACJ;;AAEDR,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,EAAP;AACH;;AAEDR,EAAAA,UAAU,GAAG;AACT,SAAKM,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AACH;;AAEDN,EAAAA,UAAU,GAAG;AACT,SAAKK,KAAL,CAAWG,KAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AACI,MAAA,SAAS,EAAC,OADd;AAEI,MAAA,GAAG,EAAEJ,KAAK,IAAI,KAAKA,KAAL,GAAaA,KAF/B;AAGI,MAAA,SAAS,EAAE,IAHf;AAII,MAAA,OAAO,EAAE,KAAKT,cAJlB;AAKI,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWe,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AA5CyB;;AA+C9BjB,KAAK,CAACkB,SAAN,GAAkB;AACdD,EAAAA,WAAW,EAAElB,SAAS,CAACoB,MADT;AAEdR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB;AAFN,CAAlB;AAKA,eAAepB,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nclass Input extends Component {\n    constructor(props) {\n        super(props)\n        this.listenKeyPress = this.listenKeyPress.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.clearInput = this.clearInput.bind(this);\n        this.focusInput = this.focusInput.bind(this)\n    }\n\n    listenKeyPress(event) {\n        if (event.keyCode === 13 && !event.ctrlKey && this.props.onSubmit) {\n            this.props.onSubmit(this.input.value);\n            this.clearInput();\n        } else if (event.keyCode === 13 && event.ctrlKey) {\n            this.input.value = this.input.value + '\\n';\n            return true;\n        } else {\n            return true;\n        }\n    }\n\n    getInput() {\n        return this.input.value.trim();\n    }\n\n    clearInput() {\n        this.input.value = '';\n    }\n\n    focusInput() {\n        this.input.focus();\n    }\n    \n    render() {\n        return (\n            <textarea \n                className=\"input\"\n                ref={input => this.input = input}\n                autoFocus={true}\n                onKeyUp={this.listenKeyPress}\n                placeholder={this.props.placeholder}\n            >\n            </textarea>\n        )\n    }\n}\n\nInput.propTypes = {\n    placeholder: PropTypes.string,\n    onSubmit: PropTypes.func\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}