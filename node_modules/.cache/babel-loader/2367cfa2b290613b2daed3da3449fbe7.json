{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/ActiveMessage/index.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newChat } from \"../../redux/actions/MessageAction\";\nimport Contact from \"../Contact\";\n\nconst ActiveMessage = props => {\n  const listReceiver = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  const isLogged = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")).messages.chat : \"\";\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"contact-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, isLogged ? listReceiver.chat.map((contact, index) => React.createElement(React.Fragment, null, React.createElement(Contact, {\n    key: index * Math.random(),\n    onClick: () => {\n      dispatch(newChat(listReceiver.chat[index])); // props.history.push(\"/\");\n    },\n    image: contact.photo,\n    title: contact.username,\n    meta: contact.phone,\n    date: contact.updated_at,\n    active: props.activeContactId === contact.id ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))) : \"\"));\n};\n\nexport default ActiveMessage; // class ActiveMessage extends React.Component {\n//   state = {};\n//   render() {\n//     return (\n//       <>\n//         {/* {this.props.chats.map(chat => (\n//           <div>{chat.id}</div>\n//         ))} */}\n//       </>\n//     );\n//   }\n// }\n// // const mapStateToProps = state => ({\n// //   chats: state.messages.messageSatu\n// // });\n// export default connect()(ActiveMessage);\n// //   mapStateToProps,\n// //   {}","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/ActiveMessage/index.js"],"names":["React","useSelector","useDispatch","newChat","Contact","ActiveMessage","props","listReceiver","state","messages","dispatch","isLogged","localStorage","getItem","JSON","parse","chat","map","contact","index","Math","random","photo","username","phone","updated_at","activeContactId","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACbC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,EAA+CJ,QAA/C,CAAwDO,IAD3C,GAEb,EAFJ;AAIA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGL,QAAQ,GACLJ,YAAY,CAACS,IAAb,CAAkBC,GAAlB,CAAsB,CAACC,OAAD,EAAUC,KAAV,KACpB,0CACE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEA,KAAK,GAAGC,IAAI,CAACC,MAAL,EADf;AAEE,IAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,QAAQ,CAACP,OAAO,CAACI,YAAY,CAACS,IAAb,CAAkBG,KAAlB,CAAD,CAAR,CAAR,CADa,CAEb;AACD,KALH;AAME,IAAA,KAAK,EAAED,OAAO,CAACI,KANjB;AAOE,IAAA,KAAK,EAAEJ,OAAO,CAACK,QAPjB;AAQE,IAAA,IAAI,EAAEL,OAAO,CAACM,KARhB;AASE,IAAA,IAAI,EAAEN,OAAO,CAACO,UAThB;AAUE,IAAA,MAAM,EAAEnB,KAAK,CAACoB,eAAN,KAA0BR,OAAO,CAACS,EAAlC,GAAuC,IAAvC,GAA8C,KAVxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADK,GAkBL,EApBN,CAFF,CADF;AA2BD,CAnCD;;AAqCA,eAAetB,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newChat } from \"../../redux/actions/MessageAction\";\n\nimport Contact from \"../Contact\";\n\nconst ActiveMessage = props => {\n  const listReceiver = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n\n  const isLogged = localStorage.getItem(\"reduxState\")\n    ? JSON.parse(localStorage.getItem(\"reduxState\")).messages.chat\n    : \"\";\n\n  return (\n    <>\n      <div className=\"input-group\"></div>\n      <div className=\"contact-window\">\n        {/* {console.log(\"list receiver:\", listReceiver)} */}\n        {isLogged\n          ? listReceiver.chat.map((contact, index) => (\n              <>\n                <Contact\n                  key={index * Math.random()}\n                  onClick={() => {\n                    dispatch(newChat(listReceiver.chat[index]));\n                    // props.history.push(\"/\");\n                  }}\n                  image={contact.photo}\n                  title={contact.username}\n                  meta={contact.phone}\n                  date={contact.updated_at}\n                  active={props.activeContactId === contact.id ? true : false}\n                />\n                {/* {console.log(\"contact\", listReceiver.chat[index])} */}\n              </>\n            ))\n          : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default ActiveMessage;\n\n// class ActiveMessage extends React.Component {\n//   state = {};\n//   render() {\n//     return (\n//       <>\n//         {/* {this.props.chats.map(chat => (\n//           <div>{chat.id}</div>\n//         ))} */}\n//       </>\n//     );\n//   }\n// }\n\n// // const mapStateToProps = state => ({\n// //   chats: state.messages.messageSatu\n// // });\n\n// export default connect()(ActiveMessage);\n// //   mapStateToProps,\n// //   {}\n"]},"metadata":{},"sourceType":"module"}