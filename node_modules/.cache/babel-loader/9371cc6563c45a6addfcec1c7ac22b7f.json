{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\"; // import windowReducer from \"./redux/reducers/windowReducer\";\n// import contactsReducer from \"./redux/reducers/contactsReducer\";\n// import messagesReducer from \"./redux/reducers/messagesReducer\";\n// import openedMessageReducer from \"./redux/reducers/openedMessageReducer\";\n// import loginReducer from \"./redux/reducers/LoginReducer\";\n\nimport thunk from \"redux-thunk\";\nconst createRootReducers = combineReducers({\n  window: windowReducer,\n  contacts: contactsReducer,\n  messages: messagesReducer,\n  openedMessage: openedMessageReducer,\n  loginData: loginReducer\n});\nconst middlewares = [thunk];\nconst composeMiddlewares = compose(applyMiddleware(...middlewares), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nconst persistedState = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")) : {};\n\nconst configureStore = () => createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","compose","createLogger","thunk","createRootReducers","window","windowReducer","contacts","contactsReducer","messages","messagesReducer","openedMessage","openedMessageReducer","loginData","loginReducer","middlewares","composeMiddlewares","__REDUX_DEVTOOLS_EXTENSION__","process","env","NODE_ENV","logger","push","persistedState","localStorage","getItem","JSON","parse","configureStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAEA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,kBAAkB,GAAGN,eAAe,CAAC;AACzCO,EAAAA,MAAM,EAAEC,aADiC;AAEzCC,EAAAA,QAAQ,EAAEC,eAF+B;AAGzCC,EAAAA,QAAQ,EAAEC,eAH+B;AAIzCC,EAAAA,aAAa,EAAEC,oBAJ0B;AAKzCC,EAAAA,SAAS,EAAEC;AAL8B,CAAD,CAA1C;AAQA,MAAMC,WAAW,GAAG,CAACZ,KAAD,CAApB;AAEA,MAAMa,kBAAkB,GAAGf,OAAO,CAChCD,eAAe,CAAC,GAAGe,WAAJ,CADiB,EAEhCV,MAAM,CAACY,4BAAP,IAAuCZ,MAAM,CAACY,4BAAP,EAFP,CAAlC;;AAKA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,MAAM,GAAGnB,YAAY,EAA3B;AACAa,EAAAA,WAAW,CAACO,IAAZ,CAAiBD,MAAjB;AACD;;AAED,MAAME,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADmB,GAEnB,EAFJ;;AAIA,MAAMG,cAAc,GAAG,MACrB7B,WAAW,CAACK,kBAAD,EAAqBmB,cAArB,EAAqCP,kBAArC,CADb;;AAGA,eAAeY,cAAf","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n\n// import windowReducer from \"./redux/reducers/windowReducer\";\n// import contactsReducer from \"./redux/reducers/contactsReducer\";\n// import messagesReducer from \"./redux/reducers/messagesReducer\";\n// import openedMessageReducer from \"./redux/reducers/openedMessageReducer\";\n// import loginReducer from \"./redux/reducers/LoginReducer\";\nimport thunk from \"redux-thunk\";\n\nconst createRootReducers = combineReducers({\n  window: windowReducer,\n  contacts: contactsReducer,\n  messages: messagesReducer,\n  openedMessage: openedMessageReducer,\n  loginData: loginReducer\n});\n\nconst middlewares = [thunk];\n\nconst composeMiddlewares = compose(\n  applyMiddleware(...middlewares),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nconst persistedState = localStorage.getItem(\"reduxState\")\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\n  : {};\n\nconst configureStore = () =>\n  createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}