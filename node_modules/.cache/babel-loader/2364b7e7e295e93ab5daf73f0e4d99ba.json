{"ast":null,"code":"import _defineProperty from \"/home/latif/faizi/react/mini-project/Copy-beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  activeChats: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"ACTIVE_CHATS\":\n      return _objectSpread({}, state, {\n        activeChats: action.payload\n      });\n\n    case \"CREATE_NEW_CHAT\":\n      return _objectSpread({}, state, {\n        [action.username]: [action.payload]\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/redux/reducers/activeMsgReducer.js"],"names":["initialState","activeChats","state","action","type","payload","username"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BAAYF,KAAZ;AAAmBD,QAAAA,WAAW,EAAEE,MAAM,CAACE;AAAvC;;AACF,SAAK,iBAAL;AACE,+BACKH,KADL;AAEE,SAACC,MAAM,CAACG,QAAR,GAAmB,CAACH,MAAM,CAACE,OAAR;AAFrB;;AAIF;AACE,aAAOH,KAAP;AATJ;AAWD,CAZD","sourcesContent":["const initialState = {\n  activeChats: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"ACTIVE_CHATS\":\n      return { ...state, activeChats: action.payload };\n    case \"CREATE_NEW_CHAT\":\n      return {\n        ...state,\n        [action.username]: [action.payload]\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}