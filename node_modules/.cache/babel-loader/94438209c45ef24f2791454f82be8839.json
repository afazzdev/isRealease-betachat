{"ast":null,"code":"import _slicedToArray from \"/home/latif/faizi/react/mini-project/Copy-beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/ContactWindow/ContactWindow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport Contact from \"../Contact\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { searchContact } from \"../../redux/actions/SearchAction\";\nimport { createNewChat } from \"../../redux/actions/MessageAction\";\n\nconst ContactWindow = props => {\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        dataSearch = _React$useState2[0],\n        toSearch = _React$useState2[1];\n\n  const resSearch = useSelector(state => state.resSearch);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    toSearch(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    dispatch(searchContact(dataSearch));\n    console.log(\"data search: \", dataSearch);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"input-group\",\n    onSubmit: handleSubmit,\n    onKeyUp: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    placeholder: \"Search contact... \",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"contact-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, console.log(resSearch), resSearch ? resSearch.search.map((contact, index) => React.createElement(React.Fragment, null, React.createElement(Contact, {\n    key: \"contact-\".concat(contact.id),\n    onClick: () => {\n      dispatch(createNewChat(resSearch.search[index]));\n      props.history.push(\"/\");\n    },\n    image: contact.photo,\n    title: contact.username,\n    meta: contact.phone,\n    date: contact.updated_at,\n    active: props.activeContactId === contact.id ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), console.log(\"contact\", resSearch.search[index]))) : \"\"));\n};\n\nContactWindow.propTypes = {\n  contacts: PropTypes.array,\n  onContactClick: PropTypes.func,\n  activeContactId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default withRouter(ContactWindow);","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/ContactWindow/ContactWindow.js"],"names":["React","PropTypes","withRouter","Contact","useSelector","useDispatch","searchContact","createNewChat","ContactWindow","props","useState","dataSearch","toSearch","resSearch","state","dispatch","handleChange","e","target","value","handleSubmit","console","log","search","map","contact","index","id","history","push","photo","username","phone","updated_at","activeContactId","propTypes","contacts","array","onContactClick","func","oneOfType","string","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport Contact from \"../Contact\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { searchContact } from \"../../redux/actions/SearchAction\";\nimport { createNewChat } from \"../../redux/actions/MessageAction\";\n\nconst ContactWindow = props => {\n  const [dataSearch, toSearch] = React.useState(\"\");\n  const resSearch = useSelector(state => state.resSearch);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    toSearch(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    dispatch(searchContact(dataSearch));\n    console.log(\"data search: \", dataSearch);\n  };\n\n  return (\n    <>\n      <div\n        className=\"input-group\"\n        onSubmit={handleSubmit}\n        onKeyUp={handleSubmit}\n      >\n        <input\n          className=\"input-text\"\n          type=\"text\"\n          placeholder=\"Search contact... \"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"contact-window\">\n        {console.log(resSearch)}\n        {resSearch\n          ? resSearch.search.map((contact, index) => (\n              <>\n                <Contact\n                  key={`contact-${contact.id}`}\n                  onClick={() => {\n                    dispatch(createNewChat(resSearch.search[index]));\n                    props.history.push(\"/\");\n                  }}\n                  image={contact.photo}\n                  title={contact.username}\n                  meta={contact.phone}\n                  date={contact.updated_at}\n                  active={props.activeContactId === contact.id ? true : false}\n                />\n                {console.log(\"contact\", resSearch.search[index])}\n              </>\n            ))\n          : \"\"}\n      </div>\n    </>\n  );\n};\n\nContactWindow.propTypes = {\n  contacts: PropTypes.array,\n  onContactClick: PropTypes.func,\n  activeContactId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default withRouter(ContactWindow);\n"]},"metadata":{},"sourceType":"module"}