{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport messagesReducer from \"./redux/reducers/MessagesReducer\";\nimport loginReducer from \"./redux/reducers/LoginReducer\";\nimport thunk from \"redux-thunk\";\nimport searchReducer from \"./redux/reducers/searchReducer\";\nconst createRootReducers = combineReducers({\n  messages: messagesReducer,\n  loginData: loginReducer,\n  resSearch: searchReducer\n});\nconst middlewares = [thunk];\nconst composeMiddlewares = compose(applyMiddleware(...middlewares), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nconst persistedState = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")) : {};\n\nconst configureStore = () => createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","compose","createLogger","messagesReducer","loginReducer","thunk","searchReducer","createRootReducers","messages","loginData","resSearch","middlewares","composeMiddlewares","window","__REDUX_DEVTOOLS_EXTENSION__","process","env","NODE_ENV","logger","push","persistedState","localStorage","getItem","JSON","parse","configureStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,MAAMC,kBAAkB,GAAGT,eAAe,CAAC;AACzCU,EAAAA,QAAQ,EAAEL,eAD+B;AAEzCM,EAAAA,SAAS,EAAEL,YAF8B;AAIzCM,EAAAA,SAAS,EAAEJ;AAJ8B,CAAD,CAA1C;AAOA,MAAMK,WAAW,GAAG,CAACN,KAAD,CAApB;AAEA,MAAMO,kBAAkB,GAAGX,OAAO,CAChCD,eAAe,CAAC,GAAGW,WAAJ,CADiB,EAEhCE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFP,CAAlC;;AAKA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,MAAM,GAAGhB,YAAY,EAA3B;AACAS,EAAAA,WAAW,CAACQ,IAAZ,CAAiBD,MAAjB;AACD;;AAED,MAAME,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADmB,GAEnB,EAFJ;;AAIA,MAAMG,cAAc,GAAG,MACrB1B,WAAW,CAACQ,kBAAD,EAAqBa,cAArB,EAAqCR,kBAArC,CADb;;AAGA,eAAea,cAAf","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n\nimport messagesReducer from \"./redux/reducers/MessagesReducer\";\nimport loginReducer from \"./redux/reducers/LoginReducer\";\nimport thunk from \"redux-thunk\";\nimport searchReducer from \"./redux/reducers/searchReducer\";\n\nconst createRootReducers = combineReducers({\n  messages: messagesReducer,\n  loginData: loginReducer,\n\n  resSearch: searchReducer\n});\n\nconst middlewares = [thunk];\n\nconst composeMiddlewares = compose(\n  applyMiddleware(...middlewares),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nconst persistedState = localStorage.getItem(\"reduxState\")\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\n  : {};\n\nconst configureStore = () =>\n  createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}