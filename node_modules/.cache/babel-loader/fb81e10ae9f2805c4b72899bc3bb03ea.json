{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/MessageWindow/MessageWindow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MessageBox from \"../MessageBox\";\nimport Badge from \"../Badge\";\n\nconst MessageWindow = (messages, activeReceiver) => React.createElement(\"div\", {\n  className: \"message-window\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, messages[activeReceiver].map((message, i) => React.createElement(MessageBox, {\n  sender: message.sender,\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, message.chat)), console.log(messages.messages[activeReceiver]));\n\nMessageWindow.propTypes = {\n  messages: PropTypes.array\n};\nexport default MessageWindow;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/MessageWindow/MessageWindow.js"],"names":["React","PropTypes","MessageBox","Badge","MessageWindow","messages","activeReceiver","map","message","i","sender","chat","console","log","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,cAAX,KACpB;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,QAAQ,CAACC,cAAD,CAAR,CAAyBC,GAAzB,CAA6B,CAACC,OAAD,EAAUC,CAAV,KAC5B,oBAAC,UAAD;AAAY,EAAA,MAAM,EAAED,OAAO,CAACE,MAA5B;AAAoC,EAAA,GAAG,EAAED,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,OAAO,CAACG,IADX,CADD,CADH,EAMGC,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACA,QAAT,CAAkBC,cAAlB,CAAZ,CANH,CADF;;AAWAF,aAAa,CAACU,SAAd,GAA0B;AACxBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc;AADI,CAA1B;AAIA,eAAeX,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MessageBox from \"../MessageBox\";\nimport Badge from \"../Badge\";\n\nconst MessageWindow = (messages, activeReceiver) => (\n  <div className=\"message-window\">\n    {messages[activeReceiver].map((message, i) => (\n      <MessageBox sender={message.sender} key={i}>\n        {message.chat}\n      </MessageBox>\n    ))}\n    {console.log(messages.messages[activeReceiver])}\n  </div>\n);\n\nMessageWindow.propTypes = {\n  messages: PropTypes.array\n};\n\nexport default MessageWindow;\n"]},"metadata":{},"sourceType":"module"}