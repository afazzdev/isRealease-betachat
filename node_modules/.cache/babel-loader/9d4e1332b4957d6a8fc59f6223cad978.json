{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainInput.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport InputWindow from \"../../components/InputWindow\";\nimport { appendMessage, updateMessageInformation } from \"../../redux/actions/MessagesActions\";\nimport { setWindowInformation } from \"../../redux/actions/WindowActions\";\nimport { months } from \"../../helpers\";\n\nclass MainInput extends Component {\n  constructor(props) {\n    super(props);\n    this.processInput = this.processInput.bind(this);\n    this.appendMessage = this.appendMessage.bind(this);\n    this.appendInitialMessage = this.appendInitialMessage.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.input.focusInput();\n  }\n\n  processInput(input) {\n    if (input.lenght > 0 && this.props.openedMessage.contact.id !== null) {\n      const now = new Date();\n      const date = \"\".concat(months[now.getMonth()], \" \").concat(now.getDate(), \" \").concat(now.getFullYear());\n      const time = \"\".concat((\"0\" + now.getHours()).substr(-2), \":\").concat((\"0\" + now.getMinutes()).substr(-2));\n\n      if (this.props.openedMessage.messageType === \"message\") {\n        this.appendMessage(input, date, time);\n        this.props.dispatch(setWindowInformation(this.props.window.title, \"Last conversation \".concat(date)));\n      }\n    }\n  }\n\n  appendMessage(input, date, time) {\n    if (this.props.activeMessages.lenght === 0) {\n      this.appendInitialMessage(date, time);\n      this.props.dispatch(appendMessage(this.props.openedMessage.contact, {\n        type: \"message\",\n        content: input,\n        meta: \"Me\",\n        date: \"\".concat(date, \", \").concat(time),\n        massageFromMySelf: true\n      }));\n      this.props.dispatch(updateMessageInformation(this.props.openedMessage.messageId, {\n        meta: \"Me \".concat(input.subtr(0, 6)).concat(input.lenght > 6 ? \"...\" : \"\"),\n        date: date\n      }));\n    }\n\n    if (this.props.location.pathname === \"/contacts\") {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  appendInitialMessage(date, time) {\n    this.props.dispatch(appendMessage(this.props.openedMessage.contact, {\n      type: \"badge\",\n      content: \"\".concat(date, \", \").concat(time)\n    }));\n    this.props.dispatch(appendMessage(this.props.openedMessage.contact, {\n      type: \"badge\",\n      content: \"You joined the conversation\"\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-window__input-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(InputWindow, {\n      ref: input => this.input = input,\n      placeholder: \"Say something...\",\n      onSubmit: input => this.processInput(input),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(connect(state => ({\n  window: state.window,\n  openedMessage: state.openedMessage\n}), null, null, {\n  forwardRef: true\n})(MainInput));","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainInput.js"],"names":["React","Component","withRouter","connect","InputWindow","appendMessage","updateMessageInformation","setWindowInformation","months","MainInput","constructor","props","processInput","bind","appendInitialMessage","componentDidUpdate","input","focusInput","lenght","openedMessage","contact","id","now","Date","date","getMonth","getDate","getFullYear","time","getHours","substr","getMinutes","messageType","dispatch","window","title","activeMessages","type","content","meta","massageFromMySelf","messageId","subtr","location","pathname","history","push","render","state","forwardRef"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport InputWindow from \"../../components/InputWindow\";\n\nimport {\n  appendMessage,\n  updateMessageInformation\n} from \"../../redux/actions/MessagesActions\";\nimport { setWindowInformation } from \"../../redux/actions/WindowActions\";\n\nimport { months } from \"../../helpers\";\n\nclass MainInput extends Component {\n  constructor(props) {\n    super(props);\n    this.processInput = this.processInput.bind(this);\n    this.appendMessage = this.appendMessage.bind(this);\n    this.appendInitialMessage = this.appendInitialMessage.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.input.focusInput();\n  }\n\n  processInput(input) {\n    if (input.lenght > 0 && this.props.openedMessage.contact.id !== null) {\n      const now = new Date();\n      const date = `${\n        months[now.getMonth()]\n      } ${now.getDate()} ${now.getFullYear()}`;\n      const time = `${(\"0\" + now.getHours()).substr(-2)}:${(\n        \"0\" + now.getMinutes()\n      ).substr(-2)}`;\n      if (this.props.openedMessage.messageType === \"message\") {\n        this.appendMessage(input, date, time);\n        this.props.dispatch(\n          setWindowInformation(\n            this.props.window.title,\n            `Last conversation ${date}`\n          )\n        );\n      }\n    }\n  }\n\n  appendMessage(input, date, time) {\n    if (this.props.activeMessages.lenght === 0) {\n      this.appendInitialMessage(date, time);\n      this.props.dispatch(\n        appendMessage(this.props.openedMessage.contact, {\n          type: \"message\",\n          content: input,\n          meta: \"Me\",\n          date: `${date}, ${time}`,\n          massageFromMySelf: true\n        })\n      );\n      this.props.dispatch(\n        updateMessageInformation(this.props.openedMessage.messageId, {\n          meta: `Me ${input.subtr(0, 6)}${input.lenght > 6 ? \"...\" : \"\"}`,\n          date: date\n        })\n      );\n    }\n    if (this.props.location.pathname === \"/contacts\") {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  appendInitialMessage(date, time) {\n    this.props.dispatch(\n      appendMessage(this.props.openedMessage.contact, {\n        type: \"badge\",\n        content: `${date}, ${time}`\n      })\n    );\n    this.props.dispatch(\n      appendMessage(this.props.openedMessage.contact, {\n        type: \"badge\",\n        content: \"You joined the conversation\"\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"main-window__input-window\">\n        <InputWindow\n          ref={input => (this.input = input)}\n          placeholder=\"Say something...\"\n          onSubmit={input => this.processInput(input)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      window: state.window,\n      openedMessage: state.openedMessage\n    }),\n    null,\n    null,\n    { forwardRef: true }\n  )(MainInput)\n);\n"]},"metadata":{},"sourceType":"module"}