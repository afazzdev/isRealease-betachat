{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport messagesReducer from \"./redux/reducers/MessagesReducer\";\nimport loginReducer from \"./redux/reducers/LoginReducer\";\nimport thunk from \"redux-thunk\";\nimport searchReducer from \"./redux/reducers/searchReducer\";\nconst createRootReducers = combineReducers({\n  messages: messagesReducer,\n  loginData: loginReducer,\n  resSearch: searchReducer\n}); // const middlewares = [thunk];\n\nconst composeMiddlewares = compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f); // if (process.env.NODE_ENV === \"development\") {\n//   const logger = createLogger();\n//   middlewares.push(logger);\n// }\n\nconst persistedState = localStorage.getItem(\"reduxState\") ? JSON.parse(localStorage.getItem(\"reduxState\")) : {};\n\nconst configureStore = () => createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","compose","messagesReducer","loginReducer","thunk","searchReducer","createRootReducers","messages","loginData","resSearch","composeMiddlewares","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistedState","localStorage","getItem","JSON","parse","configureStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,MAAMC,kBAAkB,GAAGR,eAAe,CAAC;AACzCS,EAAAA,QAAQ,EAAEL,eAD+B;AAEzCM,EAAAA,SAAS,EAAEL,YAF8B;AAIzCM,EAAAA,SAAS,EAAEJ;AAJ8B,CAAD,CAA1C,C,CAOA;;AAEA,MAAMK,kBAAkB,GAAGT,OAAO,CAChCD,eAAe,CAACI,KAAD,CADiB,EAEhCO,MAAM,CAACC,4BAAP,GACID,MAAM,CAACC,4BAAP,EADJ,GAEIC,CAAC,IAAIA,CAJuB,CAAlC,C,CAOA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADmB,GAEnB,EAFJ;;AAIA,MAAMG,cAAc,GAAG,MACrBpB,WAAW,CAACO,kBAAD,EAAqBQ,cAArB,EAAqCJ,kBAArC,CADb;;AAGA,eAAeS,cAAf","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\n\nimport messagesReducer from \"./redux/reducers/MessagesReducer\";\nimport loginReducer from \"./redux/reducers/LoginReducer\";\nimport thunk from \"redux-thunk\";\nimport searchReducer from \"./redux/reducers/searchReducer\";\n\nconst createRootReducers = combineReducers({\n  messages: messagesReducer,\n  loginData: loginReducer,\n\n  resSearch: searchReducer\n});\n\n// const middlewares = [thunk];\n\nconst composeMiddlewares = compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f\n);\n\n// if (process.env.NODE_ENV === \"development\") {\n//   const logger = createLogger();\n//   middlewares.push(logger);\n// }\n\nconst persistedState = localStorage.getItem(\"reduxState\")\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\n  : {};\n\nconst configureStore = () =>\n  createStore(createRootReducers, persistedState, composeMiddlewares);\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}