{"ast":null,"code":"var _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\nimport { sendMessage } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const { messages } = this.state;\n\n      console.log(e);\n\n      if (e.target.value) {\n        this.props.sendMessage(this.state);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // console.log(this.state.messages);\n    };\n\n    this.state = {\n      // [this.props.activeReceiver]: \"\",\n      sender: JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id\n    };\n  }\n\n  // handleKeyUp = e => {\n  //   e.preventDefault();\n  //   if (\n  //     e.keyCode === 13 &&\n  //     !e.ctrlKey &&\n  //     this.handleSubmit &&\n  //     this.state.messages.trim().length !== 0\n  //   ) {\n  //     this.handleSubmit(e);\n  //     console.log(this.state);\n  //     this.setState({ messages: \"\" });\n  //   } else if (\n  //     e.keyCode === 13 &&\n  //     e.ctrlKey &&\n  //     this.state.messages.trim().length !== 0\n  //   ) {\n  //     e.target.value = e.target.value + \"\\n\";\n  //     return true;\n  //   }\n  // };\n  componentWillMount() {\n    const activeReceiver = this.props.activeReceiver;\n    this.setState({\n      [activeReceiver]: \"\"\n    });\n    console.log(this.props.messageState);\n  }\n\n  render() {\n    const _this$props = this.props,\n          messageState = _this$props.messageState,\n          activeReceiver = _this$props.activeReceiver,\n          idReceiver = _this$props.idReceiver;\n    const receiverList = Object.keys(messageState);\n    return React.createElement(\"div\", {\n      className: \"main-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-window__top-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(WindowTopBar, {\n      title: activeReceiver,\n      meta: \"some meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-window__message-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(MessageWindow, {\n      messages: this.props.messages,\n      idReceiver: idReceiver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(MainInput, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      onKeyUp: this.handleKeyUp,\n      value: this.state.messages,\n      name: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  sendMessage\n})(MainWindow));","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/containers/MainWindow/MainWindow.js"],"names":["React","Component","connect","withRouter","MainInput","MessageWindow","WindowTopBar","sendMessage","MainWindow","constructor","handleSubmit","e","preventDefault","console","log","target","value","props","state","handleChange","setState","name","sender","JSON","parse","localStorage","getItem","loginData","data","id","componentWillMount","activeReceiver","messageState","render","idReceiver","receiverList","Object","keys","messages","handleKeyUp","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,WAAT,QAA4B,mCAA5B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACjCQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,YARc,GAQCC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF,GADkB,CAElB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;;AAEA,UAAIA,CAAC,CAACI,MAAF,CAASC,KAAb,EAAoB;AAClB,aAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKW,KAA5B;AACD;AACF,KAhBa;;AAAA,SAkBdC,YAlBc,GAkBCR,CAAC,IAAI;AAClB,WAAKS,QAAL,CAAc;AAAE,SAACT,CAAC,CAACI,MAAF,CAASM,IAAV,GAAiBV,CAAC,CAACI,MAAF,CAASC;AAA5B,OAAd,EADkB,CAElB;AACD,KArBa;;AAEZ,SAAKE,KAAL,GAAa;AACX;AACAI,MAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,EAA+CC,SAA/C,CAAyDC,IAAzD,CAA8DC;AAF3D,KAAb;AAID;;AAiBD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,kBAAkB,GAAG;AAAA,UACXC,cADW,GACQ,KAAKd,KADb,CACXc,cADW;AAEnB,SAAKX,QAAL,CAAc;AAAE,OAACW,cAAD,GAAkB;AAApB,KAAd;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWe,YAAvB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKhB,KADnD;AAAA,UACCe,YADD,eACCA,YADD;AAAA,UACeD,cADf,eACeA,cADf;AAAA,UAC+BG,UAD/B,eAC+BA,UAD/B;AAEP,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,YAAZ,CAArB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,cAArB;AAAqC,MAAA,IAAI,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWqB,QADvB;AAEE,MAAA,UAAU,EAAEJ,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAUE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,KAAKxB,YADjB;AAEE,MAAA,QAAQ,EAAE,KAAKS,YAFjB;AAGE,MAAA,OAAO,EAAE,KAAKoB,WAHhB;AAIE,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWoB,QAJpB;AAKE,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWG,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAoBD;;AA7EgC;;AAgFnC,MAAMmB,eAAe,GAAGtB,KAAK,KAAK;AAChCc,EAAAA,YAAY,EAAEd,KAAK,CAACoB,QADY;AAEhCA,EAAAA,QAAQ,EAAEpB,KAAK,CAACoB,QAAN,CAAeA;AAFO,CAAL,CAA7B;;AAKA,eAAenC,UAAU,CACvBD,OAAO,CACLsC,eADK,EAEL;AAAEjC,EAAAA;AAAF,CAFK,CAAP,CAGEC,UAHF,CADuB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport MainInput from \"./MainInput\";\nimport MessageWindow from \"../../components/MessageWindow\";\nimport WindowTopBar from \"../../components/WindowTopBar\";\n\nimport { sendMessage } from \"../../redux/actions/MessageAction\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // [this.props.activeReceiver]: \"\",\n      sender: JSON.parse(localStorage.getItem(\"reduxState\")).loginData.data.id\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // const { messages } = this.state;\n    console.log(e);\n\n    if (e.target.value) {\n      this.props.sendMessage(this.state);\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    // console.log(this.state.messages);\n  };\n\n  // handleKeyUp = e => {\n  //   e.preventDefault();\n\n  //   if (\n  //     e.keyCode === 13 &&\n  //     !e.ctrlKey &&\n  //     this.handleSubmit &&\n  //     this.state.messages.trim().length !== 0\n  //   ) {\n  //     this.handleSubmit(e);\n  //     console.log(this.state);\n\n  //     this.setState({ messages: \"\" });\n  //   } else if (\n  //     e.keyCode === 13 &&\n  //     e.ctrlKey &&\n  //     this.state.messages.trim().length !== 0\n  //   ) {\n  //     e.target.value = e.target.value + \"\\n\";\n  //     return true;\n  //   }\n  // };\n\n  componentWillMount() {\n    const { activeReceiver } = this.props;\n    this.setState({ [activeReceiver]: \"\" });\n    console.log(this.props.messageState);\n  }\n\n  render() {\n    const { messageState, activeReceiver, idReceiver } = this.props;\n    const receiverList = Object.keys(messageState);\n\n    return (\n      <div className=\"main-window\">\n        <div className=\"main-window__top-bar\">\n          <WindowTopBar title={activeReceiver} meta=\"some meta\" />\n        </div>\n        <div className=\"main-window__message-window\">\n          <MessageWindow\n            messages={this.props.messages}\n            idReceiver={idReceiver}\n          />\n        </div>\n        <MainInput\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          onKeyUp={this.handleKeyUp}\n          value={this.state.messages}\n          name={this.state.name}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  messageState: state.messages,\n  messages: state.messages.messages\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { sendMessage }\n  )(MainWindow)\n);\n"]},"metadata":{},"sourceType":"module"}