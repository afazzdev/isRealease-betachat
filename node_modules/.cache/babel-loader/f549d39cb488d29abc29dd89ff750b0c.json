{"ast":null,"code":"import _slicedToArray from \"/home/latif/faizi/react/mini-project/Copy-beta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/latif/faizi/react/mini-project/Copy-beta/src/components/ContactWindow/ContactWindow.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contact from \"../Contact\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ContactWindow = props => {\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        dataSearch = _React$useState2[0],\n        toSearch = _React$useState2[1];\n\n  const resSearch = useSelector(state => state.resSearch);\n\n  const handleChange = e => {\n    toSearch(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    Axios.post(\"http://rocky-sierra-75836.herokuapp.com/api/search/user\", {\n      username: dataSearch\n    }).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(dataSearch);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"input-group\",\n    onSubmit: handleSubmit,\n    onKeyUp: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    placeholder: \"Search contact... \",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"contact-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, console.log(resSearch), props.contacts && props.contacts.map((contact, index) => React.createElement(Contact, {\n    key: \"contact-\".concat(contact.id),\n    onClick: () => props.onContactClick && props.onContactClick(contact.id),\n    image: contact.image,\n    title: contact.title,\n    meta: contact.meta,\n    date: contact.date,\n    active: props.activeContactId === contact.id ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nContactWindow.propTypes = {\n  contacts: PropTypes.array,\n  onContactClick: PropTypes.func,\n  activeContactId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default ContactWindow;","map":{"version":3,"sources":["/home/latif/faizi/react/mini-project/Copy-beta/src/components/ContactWindow/ContactWindow.js"],"names":["React","PropTypes","Contact","Axios","useSelector","ContactWindow","props","useState","dataSearch","toSearch","resSearch","state","handleChange","e","target","value","handleSubmit","post","username","then","res","console","log","catch","err","contacts","map","contact","index","id","onContactClick","image","title","meta","date","activeContactId","propTypes","array","func","oneOfType","string","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,0BACEN,KAAK,CAACO,QAAN,CAAe,EAAf,CADF;AAAA;AAAA,QACtBC,UADsB;AAAA,QACVC,QADU;;AAE7B,QAAMC,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;;AAEA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBb,IAAAA,KAAK,CAACc,IAAN,CAAW,yDAAX,EAAsE;AACpEC,MAAAA,QAAQ,EAAEV;AAD0D,KAAtE,EAGGW,IAHH,CAGQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHf,EAIGG,KAJH,CAISC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJhB;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACD,GAPD;;AASA,SACE,0CACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,QAAQ,EAAEQ,YAFZ;AAGE,IAAA,OAAO,EAAEA,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,QAAQ,EAAEJ,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,CAACC,GAAR,CAAYZ,SAAZ,CADH,EAEGJ,KAAK,CAACmB,QAAN,IACCnB,KAAK,CAACmB,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,KACjB,oBAAC,OAAD;AACE,IAAA,GAAG,oBAAaD,OAAO,CAACE,EAArB,CADL;AAEE,IAAA,OAAO,EAAE,MACPvB,KAAK,CAACwB,cAAN,IAAwBxB,KAAK,CAACwB,cAAN,CAAqBH,OAAO,CAACE,EAA7B,CAH5B;AAKE,IAAA,KAAK,EAAEF,OAAO,CAACI,KALjB;AAME,IAAA,KAAK,EAAEJ,OAAO,CAACK,KANjB;AAOE,IAAA,IAAI,EAAEL,OAAO,CAACM,IAPhB;AAQE,IAAA,IAAI,EAAEN,OAAO,CAACO,IARhB;AASE,IAAA,MAAM,EAAE5B,KAAK,CAAC6B,eAAN,KAA0BR,OAAO,CAACE,EAAlC,GAAuC,IAAvC,GAA8C,KATxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CAbF,CADF;AAiCD,CAlDD;;AAoDAxB,aAAa,CAAC+B,SAAd,GAA0B;AACxBX,EAAAA,QAAQ,EAAExB,SAAS,CAACoC,KADI;AAExBP,EAAAA,cAAc,EAAE7B,SAAS,CAACqC,IAFF;AAGxBH,EAAAA,eAAe,EAAElC,SAAS,CAACsC,SAAV,CAAoB,CAACtC,SAAS,CAACuC,MAAX,EAAmBvC,SAAS,CAACwC,MAA7B,CAApB;AAHO,CAA1B;AAMA,eAAepC,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Contact from \"../Contact\";\n\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst ContactWindow = props => {\n  const [dataSearch, toSearch] = React.useState(\"\");\n  const resSearch = useSelector(state => state.resSearch);\n\n  const handleChange = e => {\n    toSearch(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    Axios.post(\"http://rocky-sierra-75836.herokuapp.com/api/search/user\", {\n      username: dataSearch\n    })\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n    console.log(dataSearch);\n  };\n\n  return (\n    <>\n      <div\n        className=\"input-group\"\n        onSubmit={handleSubmit}\n        onKeyUp={handleSubmit}\n      >\n        <input\n          className=\"input-text\"\n          type=\"text\"\n          placeholder=\"Search contact... \"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"contact-window\">\n        {console.log(resSearch)}\n        {props.contacts &&\n          props.contacts.map((contact, index) => (\n            <Contact\n              key={`contact-${contact.id}`}\n              onClick={() =>\n                props.onContactClick && props.onContactClick(contact.id)\n              }\n              image={contact.image}\n              title={contact.title}\n              meta={contact.meta}\n              date={contact.date}\n              active={props.activeContactId === contact.id ? true : false}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nContactWindow.propTypes = {\n  contacts: PropTypes.array,\n  onContactClick: PropTypes.func,\n  activeContactId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default ContactWindow;\n"]},"metadata":{},"sourceType":"module"}